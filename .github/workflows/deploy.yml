name: Deploy to OpenShift

on:
  workflow_run:
    workflows:
      - Build Image # Name of the workflow in build.yml
    types:
      - completed
  workflow_dispatch: # Allows us to trigger this workflow from elsewhere (like the rules repo)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvf oc.tar.gz
          sudo mv oc /usr/local/bin

      - name: Set OpenShift parameters
        id: set_params
        run: |
          BRANCH=${{ github.event.workflow_run.outputs.branch || github.ref_name }}
      - name: Debug Branch Output
        run: |
          echo "github.event.workflow_run.head_branch: ${{ github.event.workflow_run.head_branch }}"
          echo "github.ref_name: ${{ github.ref_name }}"

      - name: Set OpenShift parameters
        id: set_params
        run: |
          BRANCH=${{ github.event.workflow_run.head_branch || github.ref_name }}
          echo "DEBUG: Branch is $BRANCH"
          if [ "$BRANCH" == "main" ]; then
            echo "NAMESPACE=${{ secrets.OPENSHIFT_PROD_NAMESPACE }}" >> $GITHUB_ENV
            echo "TOKEN=${{ secrets.OPENSHIFT_PROD_TOKEN }}" >> $GITHUB_ENV
          else
            echo "NAMESPACE=${{ secrets.OPENSHIFT_DEV_NAMESPACE }}" >> $GITHUB_ENV
            echo "TOKEN=${{ secrets.OPENSHIFT_DEV_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Authenticate and set context for OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          namespace: ${{ env.NAMESPACE }}
          openshift_token: ${{ env.TOKEN }}
          insecure_skip_tls_verify: true

      - name: Determine image tag
        id: determine_tag
        run: |
          BRANCH=${{ github.event.workflow_run.head_branch || github.ref_name }}
          if [ "$BRANCH" == "main" ]; then
            echo "IMAGE_TAG=main" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=dev" >> $GITHUB_ENV
          fi

      - name: Run Helm
        run: |
          helm upgrade --install brm-backend ./helm \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set githubRulesRepo=bcgov/brms-rules
